/*
 * LapSpi.cpp
 *
 *  Created on: Sep 19, 2018
 *  Author: John Tumath
 *	Description: Implementation file for SPI Flash Memory Driver
 */

#include <LapSpi.h>

bool LabSpi::initialize(uint8_t data_size_select, FrameModes format, uint8_t divide)
{
    // Power on the SPPn peripheral
    LPC_SC->PCONP |= (1 << 10); //SSP1 Power Enable

    // Set the peripheral clock
    LPC_SC->PCLKSEL0 &= ~(3 << 20);
    LPC_SC->PCLKSEL0 |= (1 << 20);

    // Set pins for for specified peripheral to  MOSI(P0.9), MISO (P0.8), and SCK (P0.7)
    LPC_PINCON->PINSEL0 &= ~(0x3F << 14);
    LPC_PINCON->PINSEL0 |= (0x2A << 14);

    // Set Data Size Select
    if (data_size_select < 4 || data_size_select > 16) return false;
    LPC_SSP1->CR0 = data_size_select - 1;

    // Set Frame Format
    LPC_SSP1->CR0 &= ~(3 << 4);
    LPC_SSP1->CR0 |= (format << 4);

    // Enable SSP1 as Master
    LPC_SSP1->CR1 = (1 << 1);

    // Setup SSP1 Clock Prescale Register
    if (divide < 2 || divide > 254 || divide % 2) return false;
    LPC_SSP1->CPSR = divide;
    return true;
}

uint8_t LabSpi::transfer(uint8_t send)
{
    LPC_SSP1->DR = send;
    while (LPC_SSP1->SR & (1 << 4)); //Wait until SSP1 is busy
    return LPC_SSP1->DR;
}

LabSpi::LabSpi()
{
}

LabSpi::~LabSpi()
{
}
